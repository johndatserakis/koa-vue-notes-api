name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Write File
      id: write-file
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: '.env.production'
        encodedString: ${{ secrets.APP_ENV_VARIABLES_PRODUCTION }}

    - name: Export Variables
      run: for v in `cat ${{ steps.write-file.outputs.filePath }}` ; do echo "::set-env name=${v%%=*}::${v##*=}" ; do echo ::add-mask::${v} ; done

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Amazon ECR "Login" Action for GitHub Actions
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ github.event.repository.name }}
        APP_VERSION: ${{ secrets.APP_VERSION }}
        APP_ENV: ${{ env.APP_ENV }}
        APP_PORT: ${{ env.APP_PORT }}
        JWT_SECRET: ${{ env.JWT_SECRET }}
        JWT_ACCESS_TOKEN_EXP: ${{ env.JWT_ACCESS_TOKEN_EXP }}
        DB_ADDR: ${{ env.DB_ADDR }}
        DB_DATABASE: ${{ env.DB_DATABASE }}
        DB_USER: ${{ env.DB_USER }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}
        DB_HOST: ${{ env.DB_HOST }}
        DB_PORT: ${{ env.DB_PORT }}
        APP_NAME: ${{ env.APP_NAME }}
        APP_EMAIL: ${{ env.APP_EMAIL }}
        SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
        RECAPTCHA_SECRET: ${{ env.RECAPTCHA_SECRET }}
      run: |
        docker-compose -f docker-compose.production.yml build
        docker-compose -f docker-compose.production.yml push

    # Logout of AWS ECR
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
