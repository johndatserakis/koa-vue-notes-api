name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Amazon ECR "Login" Action for GitHub Actions
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        APP_EMAIL: ${{ secrets.APP_EMAIL }}
        APP_ENV: ${{ secrets.APP_ENV }}
        APP_NAME: ${{ secrets.APP_NAME }}
        APP_PORT: ${{ secrets.APP_PORT }}
        APP_URL: ${{ secrets.APP_URL }}
        APP_VERSION: ${{ secrets.APP_VERSION }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        REPOSITORY_NAME: ${{ github.event.repository.name }}
        JWT_ACCESS_TOKEN_EXP: ${{ secrets.JWT_ACCESS_TOKEN_EXP }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      run: |
        docker info
        docker-compose --version
        sudo chown $USER:docker /var/run/docker.sock
        docker-compose -f docker-compose.production.yml build
        docker-compose -f docker-compose.production.yml push

    # Logout of AWS ECR
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
