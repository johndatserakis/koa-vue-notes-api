# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    
    # Write keys to file
    - name: Write key file
      run: |
        echo ${{ secrets.APP_ENV_VARIABLES_PRODUCTION }}|base64 -d > ./.env.production
        for v in `cat ./.env.production` ; do echo "::set-env name=${v%%=*}::${v##*=}" ; done
        #set -a
        #[ -f ./.env.production ] && . ./.env.production
        #set +a
        # set -o allexport
        # source ./.env.production
        # set +o allexport
        # ls -a
        #echo ${ APP_VERSION }
    
    # AWS Creds
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    # AWS ECR Login
    - name: Amazon ECR "Login" Action for GitHub Actions
      uses: aws-actions/amazon-ecr-login@v1
    
    # Build Image
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker info
        docker-compose --version
        docker-compose -f docker-compose.production.yml build
          --build-arg APP_VERSION=${{ env.APP_VERSION }}
          --build-arg APP_ENV=${{ env.APP_ENV }}
          --build-arg APP_PORT=$APP_PORT
          --build-arg JWT_SECRET=$JWT_SECRET
          --build-arg JWT_ACCESS_TOKEN_EXP=$JWT_ACCESS_TOKEN_EXP
          --build-arg DB_ADDR="$DB_ADDR"
          --build-arg DB_DATABASE=$DB_DATABASE
          --build-arg DB_USER=$DB_USER
          --build-arg DB_PASSWORD=$DB_PASSWORD
          --build-arg DB_HOST=$DB_HOST
          --build-arg DB_PORT=$DB_PORT
          --build-arg APP_NAME="$APP_NAME"
          --build-arg APP_EMAIL=$APP_EMAIL
          --build-arg SENDGRID_API_KEY=$SENDGRID_API_KEY
          --build-arg RECAPTCHA_SECRET=$RECAPTCHA_SECRET
        docker-compose -f docker-compose.production.yml push

    # Logout of AWS ECR
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
